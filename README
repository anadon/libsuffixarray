========================================================================
DESCRIPTION=============================================================
========================================================================

This is a C library to handle suffix array construction in a
minimalistic, while still setting up all structures needed to replace
any use of suffix trees.  For more details, see USAGE.

========================================================================
BUILD AND INSTALL=======================================================
========================================================================

The standard build and install procedure is as follows:

  make install

For debugging problems related to the suffixArrayContainer structure and
related code, verbose output is added when compiled using the following:

  make debug

Do be aware however, that this does not install the libraries into 
system directories.  This is because this build is intended to only be
useful for those debugging issues related to this library.  Such users
are expected to be able to use, move, and link the libraries as is
appropriate.

========================================================================
USAGE===================================================================
========================================================================

To use the library, include it using the following:

  #include <suffixarray.h>

To create a usable suffix array object/structure, declare the following:

  suffixArrayContainer example;

To initialize *example*, set it to the following:

  example = makeSuffixArray(sequence, sequenceLength);

The above uses sequence as an unsigned char*, and sequenceLength as 
a size_t.  The code is implemented such that it can expand to use all 
the memory in a system.

NOTE: It does not implement oppertunistic compression of small numbers
to conserve memory, and there are no plans to implement such a feature.

To access a given suffix index, use the following:

  example.suffixArray[i]

To access a given suffix common prefix length, use the following:

  example.LCPArray[i]

To access a given Burrow-Wheeler character, use the following:

  example.sequence[example.suffixArray[i]]

To access a given suffix string, use the following:

  size_t startIndex = (1 + example.suffixArray[i]) % example.length;
  for(size_t j = startIndex; j < example.length; j++)
    example.sequence[j]

To free resources, use the following:

  freeSuffixArray(&example);

If and only if a debug build was made, a table of a given suffix array
can be printed to stdout by calling the following:

  printSuffixArrayContainer(example);

========================================================================
AUTHORS=================================================================
========================================================================

Josh Marshall

========================================================================
Additional Credits======================================================
========================================================================

This library closely implements the structures described in "Replacing
suffix trees with enhances suffix arrays" authored by Mohamed Ibrahim 
Abouelhoda, Stefan Kurtz, and Enno Ohlebusch.

Mohamed I. Abouelhoda, Stefan Kurtz, Enno Ohlebusch. 2003. Replacing
suffix trees with enhanced suffix arrays. Journal of Discrete Algorithms
2 (2004), 53-86. DOI:http://dx.doi.org/10.1016/S1570-8667(03)00065-0
